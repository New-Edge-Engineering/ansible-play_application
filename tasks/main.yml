---
# User and group management
- name: Ensure group for this play app exists
  group:
    name: "{{ play_application_group }}"
    state: present

- name: Ensure user for this play app exists
  user:
    name: "{{ play_application_username }}"
    groups: "{{ play_application_group }}"
    createhome: no
    shell: /bin/bash
    system: yes
    state: present

# File system structure
- name: Ensure project directory exists
  file:
    path: "{{ play_application_path }}"
    state: directory
    recurse: yes
    owner: "{{ play_application_username }}"
    group: "{{ play_application_group }}"

# Application installation
- name: Install supporting software
  apt:
    name: "{{ item }}"
    state: installed
  with_items:
    - unzip

- name: Ensure application exists within the play app file system
  unarchive:
    src: "{{ play_application_url }}"
    dest: "{{ play_application_path }}"
    owner: "{{ play_application_username }}"
    group: "{{ play_application_group }}"
    remote_src: yes

- name: Ensure application has the correct permissions
  file:
    dest: "{{ play_application_path }}"
    owner: "{{ play_application_username }}"
    group: "{{ play_application_group }}"
    recurse: yes
    state: directory

- name: Ensure link is pointing to latest version
  file:
    src: "{{ play_application_path }}/{{ play_application_name }}-{{ play_application_version }}"
    dest: "{{ play_application_path }}/current"
    owner: "{{ play_application_username }}"
    group: "{{ play_application_group }}"
    state: link

#  Application modification
- name: Create central log directory
  file:
    path: "/var/log/{{ play_application_group }}/{{ play_application_username }}"
    owner: "{{ play_application_username }}"
    group: "{{ play_application_group }}"
    state: directory
    recurse: yes

- name: Link application log directory to central directory
  file:
    src: "/var/log/{{ play_application_group }}/{{ play_application_username }}"
    dest: "{{ play_application_path }}/current/logs"
    owner: "{{ play_application_username }}"
    group: "{{ play_application_group }}"
    state: link

# - debug: msg="boolean?  {{ item.value is sameas False or item.value is sameas True }}"
#   with_items: "{{ play_application_overrides|default([]) }}"
# - debug: msg="string?  {{ not(item.value is sameas False or item.value is sameas True) and not(item.value is number) }}"
#   with_items: "{{ play_application_overrides|default([]) }}"
# - debug: msg="number?  {{ not(item.value is sameas False or item.value is sameas True) and item.value is number }}"
#   with_items: "{{ play_application_overrides|default([]) }}"

- name: Ensure correct string values are used within configuration file.
  lineinfile:
    dest: "{{ play_application_path }}/current/conf/application.conf"
    group: "{{ play_application_group }}"
    line: "{{ item.key }}=\"{{ item.value }}\""
    owner: "{{ play_application_username }}"
    regexp: "^(#|){{ item.key }}=(\").*(\"|)$"
    state: present
  when: not(item.value is sameas False or item.value is sameas True) and not(item.value is number)
  with_items: "{{ play_application_overrides|default([]) }}"

- name: Ensure correct number values are used within configuration file.
  lineinfile:
    dest: "{{ play_application_path }}/current/conf/application.conf"
    group: "{{ play_application_group }}"
    line: "{{ item.key }}={{ item.value }}"
    owner: "{{ play_application_username }}"
    regexp: "^(#|){{ item.key }}=[0-9]{0,}$"
    state: present
  when: not(item.value is sameas False or item.value is sameas True) and item.value is number
  with_items: "{{ play_application_overrides|default([]) }}"

- name: Ensure correct boolean values are used within configuration file.
  lineinfile:
    dest: "{{ play_application_path }}/current/conf/application.conf"
    group: "{{ play_application_group }}"
    line: "{{ item.key }}={{ item.value|lower }}"
    owner: "{{ play_application_username }}"
    regexp: "^(#|){{ item.key }}=(true|false)$"
    state: present
  when: item.value is sameas False or item.value is sameas True
  with_items: "{{ play_application_overrides|default([]) }}"

# Service installation
- name: Ensure the upstart configuration exists on the system
  template:
    src: upstart.j2
    dest: "/etc/init/{{ play_application_name }}.conf"
  sudo: yes
  notify:
    - restart service
